//nolint:revive
package realizedstate

// The following file has been autogenerated. Please avoid any changes!
import (
	"errors"

	vapiProtocolClient_ "github.com/vmware/vsphere-automation-sdk-go/runtime/protocol/client"
	client0 "github.com/vmware/vsphere-automation-sdk-go/services/nsxt/infra/realized_state"
	model0 "github.com/vmware/vsphere-automation-sdk-go/services/nsxt/model"
	client1 "github.com/vmware/vsphere-automation-sdk-go/services/nsxt/orgs/projects/infra/realized_state"

	utl "github.com/vmware/terraform-provider-nsxt/api/utl"
)

type VirtualMachineClientContext utl.ClientContext

func NewVirtualMachinesClient(sessionContext utl.SessionContext, connector vapiProtocolClient_.Connector) *VirtualMachineClientContext {
	var client interface{}

	switch sessionContext.ClientType {

	case utl.Local:
		client = client0.NewVirtualMachinesClient(connector)

	case utl.Multitenancy:
		client = client1.NewVirtualMachinesClient(connector)

	default:
		return nil
	}
	return &VirtualMachineClientContext{Client: client, ClientType: sessionContext.ClientType, ProjectID: sessionContext.ProjectID, VPCID: sessionContext.VPCID}
}

func (c VirtualMachineClientContext) List(cursorParam *string, enforcementPointPathParam *string, includeMarkForDeleteObjectsParam *bool, includedFieldsParam *string, pageSizeParam *int64, sortAscendingParam *bool, sortByParam *string) (model0.VirtualMachineListResult, error) {
	var err error
	var obj model0.VirtualMachineListResult

	switch c.ClientType {

	case utl.Local:
		client := c.Client.(client0.VirtualMachinesClient)
		obj, err = client.List(cursorParam, enforcementPointPathParam, includeMarkForDeleteObjectsParam, includedFieldsParam, pageSizeParam, sortAscendingParam, sortByParam)

	case utl.Multitenancy:
		client := c.Client.(client1.VirtualMachinesClient)
		obj, err = client.List(utl.DefaultOrgID, c.ProjectID, cursorParam, enforcementPointPathParam, includeMarkForDeleteObjectsParam, includedFieldsParam, pageSizeParam, sortAscendingParam, sortByParam)

	default:
		err = errors.New("invalid infrastructure for model")
	}
	return obj, err
}
